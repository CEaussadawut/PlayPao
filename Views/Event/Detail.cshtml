@model PlayPao.Models.Event

@{
    ViewData["Title"] = "Event Detail";
    var currentUser = Context.Session.GetString("User");
    var isCreator = !string.IsNullOrWhiteSpace(currentUser) && currentUser == Model.Creator;
    var isFull = Model.CurrentMembers >= Model.Member;
}

<div class="event-detail">
    <a href="/" class="btn-back">← Back</a>

    <h2>@Model.Title</h2>
    <p class="event-creator">Created by: @Model.Creator</p>

    @if (TempData["Message"] != null)
    {
        <div
            style="margin:.5rem 0; padding:.5rem .75rem; border-radius:8px; background:#fff7ed; color:#7c2d12; border:1px solid #fed7aa;">
            @TempData["Message"]
        </div>
    }

    <div class="event-content">
        <div class="event-card"
            style="position:relative; display:flex; gap:14px; box-shadow:0 0 5px rgb(0 0 0 / .2); padding:1rem; border-radius:8px;">
            @if (isFull)
            {
                <span style="position:absolute; right:12px; top:12px;
                                     background:#f3f4f6; color:#374151; font-weight:700; font-size:12px;
                                     border-radius:12px; padding:2px 10px;">
                    Full
                </span>
            }

            <img src="@(string.IsNullOrWhiteSpace(Model.ImagePath) ? "https://i.ytimg.com/vi/N_Fb4x-OAzE/oardefault.jpg" : Model.ImagePath)"
                alt="" style="height:110px;width:200px;border-radius:8px;object-fit:cover;">

            <div class="event-info" style="flex:1;">
                <!-- เวลา + สถานที่ (แสดงต่อท้ายเวลา) -->
                <p class="event-date" style="color:#FF742B; margin:0 0 .25rem 0;">
                    @Model.Date.ToString("dddd, MMMM d, yyyy")
                    @Model.Time.Hours.ToString("D2"):@Model.Time.Minutes.ToString("D2")
                    -
                    @Model.EndTime.Hours.ToString("D2"):@Model.EndTime.Minutes.ToString("D2")
                    @if (!string.IsNullOrWhiteSpace(Model.Location))
                    {
                        <span style="color:#6b7280"> • @Model.Location</span>
                    }
                </p>

                <p style="margin:.25rem 0;">@Model.Description</p>
                <p style="margin:.25rem 0;">จำนวนผู้เข้าร่วม: <b>@Model.CurrentMembers / @Model.Member</b></p>

                @* JOIN *@
                @if (string.IsNullOrWhiteSpace(currentUser))
                {
                    <a asp-controller="Auth" asp-action="Login" style="color:#FF742B;text-decoration:none;">
                        Login to join
                    </a>
                }
                else if (!isCreator)
                {
                    var existingRequest = ((List<EventJoinRequest>)ViewBag.JoinRequests)?.FirstOrDefault(r => r.EventId ==
                    Model.Id && r.User == currentUser);
                    var isJoined = Model.JoinedUsers.Contains(currentUser);

                    if (isJoined)
                    {
                        <p style="color: green;">You are a member of this event.</p>
                    }
                    else if (existingRequest != null && existingRequest.Status == "Pending")
                    {
                        <p style="color: orange;">Join request pending approval.</p>
                    }
                    else if (existingRequest != null && existingRequest.Status == "Rejected")
                    {
                        <p style="color: red;">Join request was rejected.</p>
                    }
                    else if (isFull)
                    {
                        <button type="button" disabled
                            style="background:#e5e7eb;color:#6b7280;border-radius:2rem;padding:.35rem .9rem;border:none;cursor:not-allowed;">
                            Join
                        </button>
                    }
                    else
                    {
                        <form method="post" asp-controller="Event" asp-action="RequestJoin" asp-route-eventId="@Model.Id"
                            style="display:inline;">
                            @Html.AntiForgeryToken()
                            <button type="submit"
                                style="background:#FF742B;color:#fff;border-radius:2rem;padding:.35rem .9rem;border:none;cursor:pointer;">
                                Request to Join
                            </button>
                        </form>
                    }
                }

                @* OWNER CONTROLS *@
                @if (isCreator)
                {
                    <p style="font-style:italic;color:#666; margin:.5rem 0 0 0;">You created this event</p>
                    <div style="display:flex; gap:.5rem; margin-top:.5rem;">
                        <a asp-controller="Event" asp-action="Edit" asp-route-id="@Model.Id"
                            style="background-color:#007bff;color:white;border-radius:2rem;text-decoration:none;padding:.35rem .9rem;">
                            Edit
                        </a>

                        <form method="post" action="@Url.Action("Delete", "Event", new { id = Model.Id })"
                            style="display:inline;"
                            onsubmit="return confirm('Are you sure you want to delete this event?')">
                            @Html.AntiForgeryToken()
                            <button type="submit"
                                style="background-color:#dc3545;color:white;border-radius:2rem;border:none;cursor:pointer;padding:.35rem .9rem;">
                                Delete
                            </button>
                        </form>
                    </div>
                }
            </div>
        </div>

        <!-- Chat Box -->
        <div class="chat-box" style="margin-top:1rem;">
            <h4>Chat</h4>
            <div class="chat-messages" style="max-height:200px; overflow-y:auto; border:1px solid #ddd; padding:0.5rem; margin-bottom:0.5rem;">
                @if (ViewBag.ChatMessages != null)
                {
                    @foreach (var msg in (List<ChatMessage>)ViewBag.ChatMessages)
                    {
                        <div style="margin-bottom:0.5rem;">
                            <strong>@msg.User:</strong> @msg.Message
                            <small style="color:#666;">(@msg.Timestamp.ToString("HH:mm"))</small>
                        </div>
                    }
                }
            </div>
            @if (!string.IsNullOrWhiteSpace(currentUser) && (isCreator || Model.JoinedUsers.Contains(currentUser)))
            {
                <form method="post" asp-controller="Event" asp-action="SendMessage" asp-route-eventId="@Model.Id" class="chat-input" style="display:flex; gap:0.5rem;">
                    @Html.AntiForgeryToken()
                    <input type="text" name="message" placeholder="Type a message..." style="flex:1; padding:0.5rem; border:1px solid #ddd; border-radius:4px;" required />
                    <button type="submit" style="padding:0.5rem 1rem; background:#FF742B; color:#fff; border:none; border-radius:4px; cursor:pointer;">Send</button>
                </form>
            }
            else
            {
                <p style="color:#666; font-style:italic;">Join the event to participate in chat.</p>
            }
        </div>

        <!-- Joined Users -->
        @if (ViewBag.JoinedUserProfiles != null && ((List<UserProfile>)ViewBag.JoinedUserProfiles).Any())
        {
            <div class="joined-users">
                <h4>Joined Users</h4>
                <div class="users-grid">
                    @foreach (var profile in (List<UserProfile>)ViewBag.JoinedUserProfiles)
                    {
                        <div class="user-card">
                            <img src="@profile.AvatarUrl" alt="Avatar" class="user-avatar">
                            <div class="user-info">
                                <h5>@profile.DisplayName</h5>
                                <p>@(profile.UserName == Model.Creator ? "Creator" : "Member")</p>
                            </div>
                        </div>
                    }
                </div>
            </div>
        }
    </div>
</div>